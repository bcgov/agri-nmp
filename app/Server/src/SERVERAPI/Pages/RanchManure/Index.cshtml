@page
@using Agri.Models
@model SERVERAPI.Pages.RanchManure.Index
@{
    ViewData["HeaderTitle"] = "Manure and Imports";
    Layout = "_PageLayout";
}
<div class="form-box-body">
    <div class="form-box-table">
        <div class="form-box-table-row form-box-table-header row row-eq-height">
            <div class="col-sm-12 form-box-table-cell">
                <strong>Manure Generated</strong>
            </div>
        </div>
        <div class="form-box-table-row form-box-table-header row row-eq-height">
            <div class="col-sm-12 form-box-table-cell"></div>
        </div>
        <div class="form-box-table-row form-box-table-header row row-eq-height">
            <div class="col-sm-5 form-box-table-cell">
                Animal Sub Type
            </div>
            <div class="col-sm-2 form-box-table-cell">
                Manure Type
            </div>
            <div class="col-sm-2 form-box-table-cell">
                Days Collected
            </div>
            <div class="col-sm-3 form-box-table-cell">
                Amount collected per year
            </div>
        </div>
        @foreach (var animal in Model.Data.FarmAnimals)
        {
            <div class="form-box-table-row  row row-eq-height">
                <div class="col-sm-5 form-box-table-cell">
                    @animal.AnimalSubTypeName
                </div>
                <div class="col-sm-2 form-box-table-cell">
                    @animal.ManureMaterialType
                </div>
                <div class="col-sm-2 form-box-table-cell">
                    @animal.DurationDays
                </div>
                <div class="col-sm-3 form-box-table-cell">
                    @if (animal.IsManureCollected)
                    {
                        <span>@animal.ManureGeneratedTonsPerYear @(animal.ManureGeneratedTonsPerYear > 1 ? "tons" : "ton")</span>
                    }
                    else
                    {
                        <i>Manure not collected</i>
                    }
                </div>
            </div>
        }
    </div>
    <hr />
    <div class="form-box-table">
        <div class="form-box-table-row form-box-table-header row row-eq-height">
            <div class="col-sm-12 form-box-table-cell">
                <strong>Manure/Compost Imported</strong>
            </div>
        </div>
        @if (Model.Data.ImportedManures.Any())
        {
            <div class="form-box-table-row form-box-table-header row row-eq-height">
                <div class="col-sm-12 form-box-table-cell"></div>
            </div>
            <div class="form-box-table-row form-box-table-header row row-eq-height">
                <div class="col-sm-4 form-box-table-cell">
                    <strong>Material Type</strong>
                </div>
                <div class="col-sm-2 form-box-table-cell">
                    <strong>Liquid/Solid</strong>
                </div>
                <div class="col-sm-6 form-box-table-cell">
                    <strong>Amount Imported per year</strong>
                </div>
            </div>
            @foreach (var import in Model.Data.ImportedManures)
            {
                <div class="form-box-table-row row row-eq-height">
                    <div class="col-sm-4 form-box-table-cell">
                        @import.MaterialName
                    </div>
                    <div class="col-sm-2 form-box-table-cell">
                        @import.ManureType
                    </div>
                    <div class="col-sm-4 form-box-table-cell">
                        @if (import.ManureType == Agri.Models.ManureMaterialType.Solid)
                        {
                            @import.AnnualAmountDisplayWeight
                        }
                        else
                        {
                            @import.AnnualAmountDisplayVolume
                        }
                    </div>
                    <div class="col-sm-1">
                        <button title="Edit Import" aria-label="Edit" class="form-box-table-button" type="button" data-toggle="razor-page-modal" data-url="@Url.Page("CreateEdit", "Edit", new { id = import.Id })">
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve" stroke-width="2"><g stroke-width="2" transform="translate(0, 0)"><line data-cap="butt" data-color="color-2" fill="none" stroke="#444444" stroke-width="2" stroke-miterlimit="10" x1="14.5" y1="4.5" x2="19.5" y2="9.5" stroke-linejoin="miter" stroke-linecap="butt"></line> <line data-cap="butt" data-color="color-2" fill="none" stroke="#444444" stroke-width="2" stroke-miterlimit="10" x1="3" y1="16" x2="8" y2="21" stroke-linejoin="miter" stroke-linecap="butt"></line> <path fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" d="M8,21l-6,1l1-6 L16.586,2.414c0.781-0.781,2.047-0.781,2.828,0l2.172,2.172c0.781,0.781,0.781,2.047,0,2.828L8,21z" stroke-linejoin="miter"></path></g></svg>
                        </button>
                    </div>
                    <div class="col-sm-1">
                        <button title="Delete Import" aria-label="Delete" class="form-box-table-button" type="button" data-toggle="razor-page-modal" data-url="@Url.Page("Delete", "", new { id = import.Id})">
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve" stroke-width="2"><g stroke-width="2" transform="translate(0, 0)"><polyline fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" points="20,9 20,23 4,23 4,9 " stroke-linejoin="miter"></polyline> <line fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="1" y1="5" x2="23" y2="5" stroke-linejoin="miter"></line> <line data-color="color-2" fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="12" y1="12" x2="12" y2="18" stroke-linejoin="miter"></line> <line data-color="color-2" fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="8" y1="12" x2="8" y2="18" stroke-linejoin="miter"></line> <line data-color="color-2" fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="16" y1="12" x2="16" y2="18" stroke-linejoin="miter"></line> <polyline fill="none" stroke="#444444" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" points="8,5 8,1 16,1 16,5 " stroke-linejoin="miter"></polyline></g></svg>
                        </button>
                    </div>
                </div>
            }
        }
    </div>
</div>
<div class="form-box-table-first text-center">
    <button class="btn btn-default" type="button" data-toggle="razor-page-modal" data-url="@Url.Page("CreateEdit", "Create")">Add Material</button>
</div>
@section PreviousNextNavigation
{
    @await Component.InvokeAsync("NextPreviousNavigation", new NextPrevNavViewModel { CurrentPage = FeaturePages.RanchManureIndex })
}