{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "dotnecore-stack",
    "annotations": {
      "description": "Contains frontend, middleware, backend and database tiers.",
      "tags": "aspnetcore",
      "iconClass": "icon-github"
    }
  },
  "labels": {
    "template": "environment-deployment"
  },
  "objects": [
		{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${PDF_NAME}",
        "annotations": {
          "description": "Exposes and load balances the PDF pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
			"protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${PDF_NAME}"
        }
      }
    },
	{
    "kind": "DeploymentConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "${PDF_NAME}",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "template": "environment"
        },
        "annotations": {
            "description": "Defines how to deploy the PDF server"
        }
    },
    "spec": {
        "strategy": {
            "type": "Rolling",
            "rollingParams": {
                "updatePeriodSeconds": 1,
                "intervalSeconds": 1,
                "timeoutSeconds": 600,
                "maxUnavailable": "25%",
                "maxSurge": "25%"
            },
            "resources": {}
        },
        "triggers": [
            {
                "type": "ConfigChange"
            },
            {
                "type": "ImageChange",
                "imageChangeParams": {
                    "automatic": true,
                    "containerNames": [
                        "${PDF_NAME}"
                    ],
                    "from": {
                        "kind": "ImageStreamTag",
                        "namespace": "agri-nmp-tools",
                        "name": "${PDF_NAME}:${APP_DEPLOYMENT_TAG}"
                    }
                }
            }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
            "name": "${PDF_NAME}"
        },
        "template": {
            "metadata": {
                "name": "${PDF_NAME}",
                "creationTimestamp": null,
                "labels": {
                    "name": "${PDF_NAME}"
                }
            },
            "spec": {
                "containers": [
                    {
                        "name": "${PDF_NAME}",
                        "image": " ",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ASPNETCORE_ENVIRONMENT",
                                "value": "Staging"
                            },
                            {
                                "name": "LC_ALL",
                                "value": "C"
                            }                            
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "securityContext": {}
            }
        }
    },
    "status": {}
    },
    
	{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${BACKEND_NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
			"protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${BACKEND_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${BACKEND_NAME}",
        "annotations": {
          "description": "Defines how to deploy the backend server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
		  "rollingParams": {
                "updatePeriodSeconds": 1,
                "intervalSeconds": 1,
                "timeoutSeconds": 600,
                "maxUnavailable": "25%",
                "maxSurge": "25%"
            },
            "resources": {}
        },
        "triggers": [		
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${BACKEND_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${APP_IMAGE_NAMESPACE}",
                "name": "${BACKEND_IMAGE_NAME}:${APP_DEPLOYMENT_TAG}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${BACKEND_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${BACKEND_NAME}",
            "labels": {
              "name": "${BACKEND_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${BACKEND_NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080,
					"protocol": "TCP"
                  }
                ],                
                "readinessProbe": {
                  "timeoutSeconds": 5,
                  "initialDelaySeconds": 15,
                  "httpGet": {
                    "path": "${BACKEND_READINESS_PROBE_URL}",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 5,
                  "initialDelaySeconds": 15,
                  "httpGet": {
                    "path": "${BACKEND_READINESS_PROBE_URL}",
                    "port": 8080
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${BACKEND_MEMORY_LIMIT}"
                  }
                }
              }
            ]
            
          }
        }
      }
    },
{
    "kind": "Route",
    "apiVersion": "v1",
    "metadata": {
        "name": "nmp",
        "creationTimestamp": null,
        "labels": {
            "template": "environment-deployment"
        }
    },
    "spec": {
        "host": "agri-nmp-${APP_DEPLOYMENT_TAG}.pathfinder.gov.bc.ca",
        "to": {
            "kind": "Service",
            "name": "nmp",
            "weight": 100
        },
        "port": {
            "targetPort": "web"
        },
        "wildcardPolicy": "None"
    }
}    
  ],
  "parameters": [
    {
	  "name": "APPLICATION_NAME",
      "displayName": "Application Name",
      "description": "The name given to the application",
      "required": true,
      "value": "nmp"
	},    
	{
      "name": "BACKEND_NAME",
      "displayName": "Backend Name",
      "description": "The name assigned to all of the backend objects defined in this template.",
      "required": true,
      "value": "nmp"
    },
	{
      "name": "RPROXY_NAME",
      "displayName": "Reverse Proxy Name (SiteMinder)",
      "description": "The name assigned to the objects used as a SiteMinder entry point (or Reverse Proxy).  Typcially this is an NGINX instance.",
      "required": true,
      "value": "cerberus"
    },
    {
      "name": "FRONTEND_MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the frontend container can use.",
      "value": "512Mi"
    },
    {
      "name": "MIDDLEWARE_MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the Middleware container can use.",
      "value": "512Mi"
    },	
    {
      "name": "BACKEND_MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the ASP.NET Core container can use.",
      "value": "512Mi"
    },
    {
      "name": "POSTGRESQL_MEMORY_LIMIT",
      "displayName": "Memory Limit (PostgreSQL)",
      "description": "Maximum amount of memory the PostgreSQL container can use.",
      "value": "512Mi"
    },
	{
      "name": "RPROXY_MEMORY_LIMIT",
      "displayName": "Memory Limit (Reverse Proxy)",
      "description": "Maximum amount of memory the reverse proxy container can use.",
      "value": "512Mi"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
      "value": ""
    },    
	{
      "name": "PDF_NAME",
      "displayName": "PDF microservice Name",
      "value": "pdf"
    },    
    {
      "name": "PORT",
      "displayName": "Application port",
      "description": "Port that application is listening on for requests.",
      "value": "8080",
      "required": true
    },
    {
      "name": "FRONTEND_READINESS_PROBE_URL",
      "displayName": "Frontend Readiness probe URL",
      "description": "URL that can be used to determine if application is 'ready'.",
      "value": "/",
      "required": true
    },
    {
      "name": "FRONTEND_LIVENESS_PROBE_URL",
      "displayName": "Frontend Liveness probe URL",
      "description": "URL that can be used to determine if application is 'live'.",
      "value": "/",
      "required": true
    },	
	{
      "name": "BACKEND_READINESS_PROBE_URL",
      "displayName": "Backend Readiness probe URL",
      "description": "URL that can be used to determine if application is 'ready'.",
      "value": "/",
      "required": true
    },
    {
      "name": "BACKEND_LIVENESS_PROBE_URL",
      "displayName": "Backend Liveness probe URL",
      "description": "URL that can be used to determine if Backend application is 'live'.",
      "value": "/",
      "required": true
    },
    {
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database Volume Capacity",
      "description": "Volume space available for postgres database, e.g. 512Mi, 2Gi.",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "DOCUMENT_VOLUME_CAPACITY",
      "displayName": "Document Volume Capacity",
      "description": "Volume space available for Document uploads, e.g. 512Mi, 2Gi.",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "DOCUMENT_MOUNT_PATH",
      "displayName": "Document Mount Path",
      "description": "Path in container where document volume should be mounted.",
      "value": "/uploads",
      "required": true
    },    
	{
      "name": "BACKEND_IMAGE_NAME",
      "displayName": "Application Backend image name.",
      "description": "Application Backend image name.",
      "value": "nmp",
      "required": true
    },
	{
      "name": "PDF_IMAGE_NAME",
      "displayName": "PDF image name.",
      "description": "PDF image name.",
      "value": "pdf",
      "required": true
    },
    {
      "name": "APP_IMAGE_NAMESPACE",
      "displayName": "Namespace containing application images.",
      "description": "Namespace containing application images.",
      "value": "agri-nmp-tools",
      "required": true
    },
    {
      "name": "APP_DEPLOYMENT_TAG",
      "displayName": "Image tag to watch for changes and trigger deployment.",
      "description": "Image tag to watch for changes and trigger deployment.",
      "value": "dev",
      "required": true
    }
  ]
}