{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "nmp",
        "creationTimestamp": null
    },
    "labels": {
        "template": "nmp"
    },
  "parameters": [
    {
      "name": "NAME_SUFFIX",
      "displayName": "Name",
      "description": "The suffix for all created objects",
      "required": false,
      "value": ""
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "SOURCE_REPOSITORY_URL",
      "description": "The suffix for all created objects",
      "required": false,
      "value": "https://github.com/bcgov/agri-nmp.git"
    },
    {
      "name": "ENV_NAME"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "DB Name",
      "description": "Name for NMP AgriConfiguration Database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "DB Username",
      "description": "Username for NMP AgriConfiguration Database user that will be used for accessing the database.",
      "value": "5Gi"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "Database Password",
      "description": "Password for the NMP AgriConfiguration Database user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database volume capacity",
      "description": "Size of the database used for NMP",
      "value": "5Gi"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database service name",
      "description": "Name of the database service",
      "value": "postgresql-nmp"
    }
  ],
  "objects": [
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "nmp${NAME_SUFFIX}",
        "generation": 1515,
        "creationTimestamp": null,
        "labels": {
          "base-name": "nmp"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "pdf${NAME_SUFFIX}",
        "generation": 1283,
        "creationTimestamp": null,
        "labels": {
          "base-name": "pdf"
        }
      }
    },
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "postgres-secrets${NAME_SUFFIX}"
      },
      "stringData": {
        "database-name": "${DATABASE_NAME}",
        "database-user": "${DATABASE_USER}",
        "database-password": "${DATABASE_PASSWORD}",
        "database-uri": "{.spec.clusterIP}"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgres",
            "protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
            "nodePort": 0
          }
        ],
        "selector": {
          "app": "${DATABASE_SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
          "app": "${DATABASE_SERVICE_NAME}"
        },
        "annotations": {
          "description": "Defines how to deploy the database",
          "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "postgres"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "openshift",
                "name": "postgres:9.4"
              }
            }
          }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
          "app": "${DATABASE_SERVICE_NAME}",
          "deploymentconfig": "${DATABASE_SERVICE_NAME}"
        },

        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "${DATABASE_SERVICE_NAME}",
              "deploymentconfig": "${DATABASE_SERVICE_NAME}"
            },
            "annotations": {
              "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "postgres",
                "image": "registry.access.redhat.com/rhscl/postgresql-94-rhel7",
                "ports": [
                  {
                    "containerPort": 5432,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "AgriConfiguration"
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "postgres-secrets${NAME_SUFFIX}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "postgres-secrets${NAME_SUFFIX}",
                        "key": "database-user"
                      }
                    }
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 15,
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-i",
                      "-c",
                      "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                    ]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 5432
                  }
                },
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/pgsql/data"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "Always"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {
              "capabilities": {},
              "privileged": false
            }
          },
          "restartPolicy": "Always",
          "dnsPolicy": "ClusterFirst"
        },
        "status": {}
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "nmp${NAME_SUFFIX}",
        "creationTimestamp": null,
        "labels": null
      },
      "spec": {
        "triggers": [
          {
            "type": "ImageChange",
            "imageChange": {}
          },
          {
            "type": "ConfigChange"
          }
        ],
        "runPolicy": "SerialLatestOnly",
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "master"
          },
          "contextDir": "/app"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "dotnet-21-rhel7${NAME_SUFFIX}:2.1"
            },
            "env": [
              {
                "name": "BUILD_LOGLEVEL",
                "value": "2"
              },
              {
                "name": "DOTNET_STARTUP_PROJECT",
                "value": "Server/src/SERVERAPI"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "nmp${NAME_SUFFIX}:${ENV_NAME}"
          }
        },
        "resources": {
          "limits": {
            "cpu": "500m",
            "memory": "2Gi"
          }
        },
        "postCommit": {},
        "nodeSelector": null
      },
      "status": {
        "lastVersion": 0
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "pdf${NAME_SUFFIX}",
        "creationTimestamp": null,
        "labels": null
      },
      "spec": {
        "triggers": [
          {
            "type": "ImageChange",
            "imageChange": {}
          },
          {
            "type": "ConfigChange"
          }
        ],
        "runPolicy": "SerialLatestOnly",
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "master"
          },
          "contextDir": "/PDF"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "dotnet-21-node${NAME_SUFFIX}:${ENV_NAME}"
            },
            "env": [
              {
                "name": "BUILD_LOGLEVEL",
                "value": "3"
              },
              {
                "name": "DOTNET_STARTUP_PROJECT",
                "value": "src/PDF.Server/PDF.Server.csproj"
              }
            ],
            "incremental": false
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "pdf${NAME_SUFFIX}:${ENV_NAME}"
          }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
      },
      "status": {
        "lastVersion": 0
      }
    }
  ]
}
